// Copyright Epic Games, Inc. All Rights Reserved.
// Generated Wrapper Source File
// DO NOT EDIT!

#include "RivermaxWrapper.h"

#include "HAL/PlatformProcess.h"

namespace UE::RivermaxCore::Private
{

    bool LoadLibraryFunctions(RIVERMAX_API_FUNCTION_LIST *FunctionList, void *LibraryHandle)
    {
        if (!LibraryHandle || !FunctionList)
        {
            return false;
        }

        FunctionList->rmx_get_version_numbers = reinterpret_cast<PFNRMX_GET_VERSION_NUMBERS>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_get_version_numbers_v1")));
        FunctionList->rmx_get_version_string = reinterpret_cast<PFNRMX_GET_VERSION_STRING>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_get_version_string_v1")));
        FunctionList->rmx_set_cpu_affinity = reinterpret_cast<PFNRMX_SET_CPU_AFFINITY>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_set_cpu_affinity_v1")));
        FunctionList->rmx_enable_system_signal_handling = reinterpret_cast<PFNRMX_ENABLE_SYSTEM_SIGNAL_HANDLING>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_enable_system_signal_handling_v1")));
        FunctionList->rmx_init_lib_param = reinterpret_cast<PFNRMX_INIT_LIB_PARAM>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_init_lib_param_v1")));
        FunctionList->rmx_set_lib_param_name = reinterpret_cast<PFNRMX_SET_LIB_PARAM_NAME>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_set_lib_param_name_v1")));
        FunctionList->rmx_set_lib_param_value = reinterpret_cast<PFNRMX_SET_LIB_PARAM_VALUE>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_set_lib_param_value_v1")));
        FunctionList->rmx_set_lib_param_forced = reinterpret_cast<PFNRMX_SET_LIB_PARAM_FORCED>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_set_lib_param_forced_v1")));
        FunctionList->rmx_apply_lib_param = reinterpret_cast<PFNRMX_APPLY_LIB_PARAM>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_apply_lib_param_v1")));
        FunctionList->_rmx_init = reinterpret_cast<PFN_RMX_INIT>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("_rmx_init")));
        FunctionList->rmx_cleanup = reinterpret_cast<PFNRMX_CLEANUP>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_cleanup_v1")));
        FunctionList->rmx_get_device_list = reinterpret_cast<PFNRMX_GET_DEVICE_LIST>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_get_device_list_v1")));
        FunctionList->rmx_free_device_list = reinterpret_cast<PFNRMX_FREE_DEVICE_LIST>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_free_device_list_v1")));
        FunctionList->rmx_get_device_count = reinterpret_cast<PFNRMX_GET_DEVICE_COUNT>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_get_device_count_v1")));
        FunctionList->rmx_get_device = reinterpret_cast<PFNRMX_GET_DEVICE>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_get_device_v1")));
        FunctionList->rmx_get_device_interface_name = reinterpret_cast<PFNRMX_GET_DEVICE_INTERFACE_NAME>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_get_device_interface_name_v1")));
        FunctionList->rmx_get_device_ip_count = reinterpret_cast<PFNRMX_GET_DEVICE_IP_COUNT>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_get_device_ip_count_v1")));
        FunctionList->rmx_get_device_ip_address = reinterpret_cast<PFNRMX_GET_DEVICE_IP_ADDRESS>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_get_device_ip_address_v1")));
        FunctionList->rmx_get_device_mac_address = reinterpret_cast<PFNRMX_GET_DEVICE_MAC_ADDRESS>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_get_device_mac_address_v1")));
        FunctionList->rmx_get_device_id = reinterpret_cast<PFNRMX_GET_DEVICE_ID>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_get_device_id_v1")));
        FunctionList->rmx_get_device_serial_number = reinterpret_cast<PFNRMX_GET_DEVICE_SERIAL_NUMBER>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_get_device_serial_number_v1")));
        FunctionList->rmx_retrieve_device_iface = reinterpret_cast<PFNRMX_RETRIEVE_DEVICE_IFACE>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_retrieve_device_iface_v1")));
        FunctionList->rmx_enquire_device_capabilities = reinterpret_cast<PFNRMX_ENQUIRE_DEVICE_CAPABILITIES>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_enquire_device_capabilities_v1")));
        FunctionList->rmx_apply_device_config = reinterpret_cast<PFNRMX_APPLY_DEVICE_CONFIG>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_apply_device_config_v1")));
        FunctionList->rmx_revert_device_config = reinterpret_cast<PFNRMX_REVERT_DEVICE_CONFIG>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_revert_device_config_v1")));
        FunctionList->rmx_init_user_clock = reinterpret_cast<PFNRMX_INIT_USER_CLOCK>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_init_user_clock_v1")));
        FunctionList->rmx_set_user_clock_handler = reinterpret_cast<PFNRMX_SET_USER_CLOCK_HANDLER>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_set_user_clock_handler_v1")));
        FunctionList->rmx_set_user_clock_context = reinterpret_cast<PFNRMX_SET_USER_CLOCK_CONTEXT>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_set_user_clock_context_v1")));
        FunctionList->rmx_use_user_clock = reinterpret_cast<PFNRMX_USE_USER_CLOCK>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_use_user_clock_v1")));
        FunctionList->rmx_init_ptp_clock = reinterpret_cast<PFNRMX_INIT_PTP_CLOCK>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_init_ptp_clock_v1")));
        FunctionList->rmx_set_ptp_clock_device = reinterpret_cast<PFNRMX_SET_PTP_CLOCK_DEVICE>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_set_ptp_clock_device_v1")));
        FunctionList->rmx_use_ptp_clock = reinterpret_cast<PFNRMX_USE_PTP_CLOCK>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_use_ptp_clock_v1")));
        FunctionList->rmx_check_clock_steady = reinterpret_cast<PFNRMX_CHECK_CLOCK_STEADY>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_check_clock_steady_v1")));
        FunctionList->rmx_get_time = reinterpret_cast<PFNRMX_GET_TIME>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_get_time_v1")));
        FunctionList->rmx_init_sockaddr_in = reinterpret_cast<PFNRMX_INIT_SOCKADDR_IN>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_init_sockaddr_in_v1")));
        FunctionList->rmx_resolve_sockaddr = reinterpret_cast<PFNRMX_RESOLVE_SOCKADDR>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_resolve_sockaddr_v1")));
        FunctionList->rmx_sockaddr_to_std_sockaddr = reinterpret_cast<PFNRMX_SOCKADDR_TO_STD_SOCKADDR>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_sockaddr_to_std_sockaddr_v1")));
        FunctionList->rmx_init_event_channel = reinterpret_cast<PFNRMX_INIT_EVENT_CHANNEL>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_init_event_channel_v1")));
        FunctionList->rmx_set_event_channel_handle = reinterpret_cast<PFNRMX_SET_EVENT_CHANNEL_HANDLE>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_set_event_channel_handle_v1")));
        FunctionList->rmx_establish_event_channel = reinterpret_cast<PFNRMX_ESTABLISH_EVENT_CHANNEL>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_establish_event_channel_v1")));
        FunctionList->rmx_init_notification = reinterpret_cast<PFNRMX_INIT_NOTIFICATION>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_init_notification_v1")));
        FunctionList->rmx_set_notification_overlapped = reinterpret_cast<PFNRMX_SET_NOTIFICATION_OVERLAPPED>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_set_notification_overlapped_v1")));
        FunctionList->rmx_request_notification = reinterpret_cast<PFNRMX_REQUEST_NOTIFICATION>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_request_notification_v1")));
        FunctionList->rmx_init_mem_registry = reinterpret_cast<PFNRMX_INIT_MEM_REGISTRY>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_init_mem_registry_v1")));
        FunctionList->rmx_set_mem_registry_option = reinterpret_cast<PFNRMX_SET_MEM_REGISTRY_OPTION>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_set_mem_registry_option_v1")));
        FunctionList->rmx_register_memory = reinterpret_cast<PFNRMX_REGISTER_MEMORY>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_register_memory_v1")));
        FunctionList->rmx_deregister_memory = reinterpret_cast<PFNRMX_DEREGISTER_MEMORY>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_deregister_memory_v1")));
        FunctionList->rmx_input_init_stream = reinterpret_cast<PFNRMX_INPUT_INIT_STREAM>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_init_stream_v1")));
        FunctionList->rmx_input_set_mem_capacity_in_packets = reinterpret_cast<PFNRMX_INPUT_SET_MEM_CAPACITY_IN_PACKETS>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_set_mem_capacity_in_packets_v1")));
        FunctionList->rmx_input_set_stream_nic_address = reinterpret_cast<PFNRMX_INPUT_SET_STREAM_NIC_ADDRESS>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_set_stream_nic_address_v1")));
        FunctionList->rmx_input_enable_stream_option = reinterpret_cast<PFNRMX_INPUT_ENABLE_STREAM_OPTION>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_enable_stream_option_v1")));
        FunctionList->rmx_input_set_mem_sub_block_count = reinterpret_cast<PFNRMX_INPUT_SET_MEM_SUB_BLOCK_COUNT>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_set_mem_sub_block_count_v1")));
        FunctionList->rmx_input_set_entry_size_range = reinterpret_cast<PFNRMX_INPUT_SET_ENTRY_SIZE_RANGE>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_set_entry_size_range_v1")));
        FunctionList->rmx_input_determine_mem_layout = reinterpret_cast<PFNRMX_INPUT_DETERMINE_MEM_LAYOUT>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_determine_mem_layout_v1")));
        FunctionList->rmx_input_get_mem_capacity_in_packets = reinterpret_cast<PFNRMX_INPUT_GET_MEM_CAPACITY_IN_PACKETS>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_get_mem_capacity_in_packets_v1")));
        FunctionList->rmx_input_get_mem_block_buffer = reinterpret_cast<PFNRMX_INPUT_GET_MEM_BLOCK_BUFFER>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_get_mem_block_buffer_v1")));
        FunctionList->rmx_input_get_stride_size = reinterpret_cast<PFNRMX_INPUT_GET_STRIDE_SIZE>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_get_stride_size_v1")));
        FunctionList->rmx_input_set_timestamp_format = reinterpret_cast<PFNRMX_INPUT_SET_TIMESTAMP_FORMAT>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_set_timestamp_format_v1")));
        FunctionList->rmx_input_create_stream = reinterpret_cast<PFNRMX_INPUT_CREATE_STREAM>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_create_stream_v1")));
        FunctionList->rmx_input_destroy_stream = reinterpret_cast<PFNRMX_INPUT_DESTROY_STREAM>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_destroy_stream_v1")));
        FunctionList->rmx_input_init_flow = reinterpret_cast<PFNRMX_INPUT_INIT_FLOW>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_init_flow_v1")));
        FunctionList->rmx_input_set_flow_local_addr = reinterpret_cast<PFNRMX_INPUT_SET_FLOW_LOCAL_ADDR>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_set_flow_local_addr_v1")));
        FunctionList->rmx_input_set_flow_remote_addr = reinterpret_cast<PFNRMX_INPUT_SET_FLOW_REMOTE_ADDR>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_set_flow_remote_addr_v1")));
        FunctionList->rmx_input_set_flow_tag = reinterpret_cast<PFNRMX_INPUT_SET_FLOW_TAG>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_set_flow_tag_v1")));
        FunctionList->rmx_input_attach_flow = reinterpret_cast<PFNRMX_INPUT_ATTACH_FLOW>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_attach_flow_v1")));
        FunctionList->rmx_input_detach_flow = reinterpret_cast<PFNRMX_INPUT_DETACH_FLOW>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_detach_flow_v1")));
        FunctionList->rmx_input_set_completion_moderation = reinterpret_cast<PFNRMX_INPUT_SET_COMPLETION_MODERATION>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_set_completion_moderation_v1")));
        FunctionList->rmx_input_init_chunk_handle = reinterpret_cast<PFNRMX_INPUT_INIT_CHUNK_HANDLE>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_init_chunk_handle_v1")));
        FunctionList->rmx_input_get_next_chunk = reinterpret_cast<PFNRMX_INPUT_GET_NEXT_CHUNK>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_get_next_chunk_v1")));
        FunctionList->rmx_input_get_chunk_completion = reinterpret_cast<PFNRMX_INPUT_GET_CHUNK_COMPLETION>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_get_chunk_completion_v1")));
        FunctionList->rmx_input_get_packet_info = reinterpret_cast<PFNRMX_INPUT_GET_PACKET_INFO>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_input_get_packet_info_v1")));
        FunctionList->rmx_output_media_init = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_INIT>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_init_v1")));
        FunctionList->rmx_output_media_set_sdp = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_SET_SDP>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_set_sdp_v1")));
        FunctionList->rmx_output_media_set_idx_in_sdp = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_SET_IDX_IN_SDP>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_set_idx_in_sdp_v1")));
        FunctionList->rmx_output_media_set_packets_per_frame = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_SET_PACKETS_PER_FRAME>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_set_packets_per_frame_v1")));
        FunctionList->rmx_output_media_set_source_ports = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_SET_SOURCE_PORTS>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_set_source_ports_v1")));
        FunctionList->rmx_output_media_set_tx_adaptive_scheduling_factor = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_SET_TX_ADAPTIVE_SCHEDULING_FACTOR>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_set_tx_adaptive_scheduling_factor_v1")));
        FunctionList->rmx_output_media_set_pcp = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_SET_PCP>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_set_pcp_v1")));
        FunctionList->rmx_output_media_set_dscp = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_SET_DSCP>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_set_dscp_v1")));
        FunctionList->rmx_output_media_set_ecn = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_SET_ECN>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_set_ecn_v1")));
        FunctionList->rmx_output_media_init_mem_blocks = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_INIT_MEM_BLOCKS>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_init_mem_blocks_v1")));
        FunctionList->rmx_output_media_set_chunk_count = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_SET_CHUNK_COUNT>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_set_chunk_count_v1")));
        FunctionList->rmx_output_media_set_sub_block_count = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_SET_SUB_BLOCK_COUNT>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_set_sub_block_count_v1")));
        FunctionList->rmx_output_media_get_sub_block = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_GET_SUB_BLOCK>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_get_sub_block_v1")));
        FunctionList->rmx_output_media_get_dup_sub_block = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_GET_DUP_SUB_BLOCK>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_get_dup_sub_block_v1")));
        FunctionList->rmx_output_media_set_packet_layout = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_SET_PACKET_LAYOUT>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_set_packet_layout_v1")));
        FunctionList->rmx_output_media_assign_mem_blocks = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_ASSIGN_MEM_BLOCKS>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_assign_mem_blocks_v1")));
        FunctionList->rmx_output_media_set_packets_per_chunk = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_SET_PACKETS_PER_CHUNK>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_set_packets_per_chunk_v1")));
        FunctionList->rmx_output_media_set_stride_size = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_SET_STRIDE_SIZE>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_set_stride_size_v1")));
        FunctionList->rmx_output_media_create_stream = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_CREATE_STREAM>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_create_stream_v1")));
        FunctionList->rmx_output_media_destroy_stream = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_DESTROY_STREAM>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_destroy_stream_v1")));
        FunctionList->rmx_output_media_init_context = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_INIT_CONTEXT>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_init_context_v1")));
        FunctionList->rmx_output_media_set_context_block = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_SET_CONTEXT_BLOCK>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_set_context_block_v1")));
        FunctionList->rmx_output_media_get_local_address = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_GET_LOCAL_ADDRESS>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_get_local_address_v1")));
        FunctionList->rmx_output_media_get_remote_address = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_GET_REMOTE_ADDRESS>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_get_remote_address_v1")));
        FunctionList->rmx_output_media_init_chunk_handle = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_INIT_CHUNK_HANDLE>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_init_chunk_handle_v1")));
        FunctionList->rmx_output_media_set_chunk_packet_count = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_SET_CHUNK_PACKET_COUNT>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_set_chunk_packet_count_v1")));
        FunctionList->rmx_output_media_get_next_chunk = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_GET_NEXT_CHUNK>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_get_next_chunk_v1")));
        FunctionList->rmx_output_media_mark_chunk_for_tracking = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_MARK_CHUNK_FOR_TRACKING>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_mark_chunk_for_tracking_v1")));
        FunctionList->rmx_output_media_commit_chunk = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_COMMIT_CHUNK>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_commit_chunk_v1")));
        FunctionList->rmx_output_media_poll_for_completion = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_POLL_FOR_COMPLETION>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_poll_for_completion_v1")));
        FunctionList->rmx_output_media_get_last_completion = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_GET_LAST_COMPLETION>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_get_last_completion_v1")));
        FunctionList->rmx_output_media_cancel_unsent_chunks = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_CANCEL_UNSENT_CHUNKS>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_cancel_unsent_chunks_v1")));
        FunctionList->rmx_output_media_skip_chunks = reinterpret_cast<PFNRMX_OUTPUT_MEDIA_SKIP_CHUNKS>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_media_skip_chunks_v1")));
        FunctionList->rmx_output_gen_init_stream = reinterpret_cast<PFNRMX_OUTPUT_GEN_INIT_STREAM>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_init_stream_v1")));
        FunctionList->rmx_output_gen_set_packets_per_chunk = reinterpret_cast<PFNRMX_OUTPUT_GEN_SET_PACKETS_PER_CHUNK>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_set_packets_per_chunk_v1")));
        FunctionList->rmx_output_gen_set_local_addr = reinterpret_cast<PFNRMX_OUTPUT_GEN_SET_LOCAL_ADDR>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_set_local_addr_v1")));
        FunctionList->rmx_output_gen_set_remote_addr = reinterpret_cast<PFNRMX_OUTPUT_GEN_SET_REMOTE_ADDR>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_set_remote_addr_v1")));
        FunctionList->rmx_output_gen_set_max_sub_blocks = reinterpret_cast<PFNRMX_OUTPUT_GEN_SET_MAX_SUB_BLOCKS>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_set_max_sub_blocks_v1")));
        FunctionList->rmx_output_gen_set_pcp = reinterpret_cast<PFNRMX_OUTPUT_GEN_SET_PCP>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_set_pcp_v1")));
        FunctionList->rmx_output_gen_set_dscp = reinterpret_cast<PFNRMX_OUTPUT_GEN_SET_DSCP>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_set_dscp_v1")));
        FunctionList->rmx_output_gen_set_ecn = reinterpret_cast<PFNRMX_OUTPUT_GEN_SET_ECN>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_set_ecn_v1")));
        FunctionList->rmx_output_gen_set_rate = reinterpret_cast<PFNRMX_OUTPUT_GEN_SET_RATE>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_set_rate_v1")));
        FunctionList->rmx_output_gen_create_stream = reinterpret_cast<PFNRMX_OUTPUT_GEN_CREATE_STREAM>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_create_stream_v1")));
        FunctionList->rmx_output_gen_destroy_stream = reinterpret_cast<PFNRMX_OUTPUT_GEN_DESTROY_STREAM>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_destroy_stream_v1")));
        FunctionList->rmx_output_gen_init_rate = reinterpret_cast<PFNRMX_OUTPUT_GEN_INIT_RATE>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_init_rate_v1")));
        FunctionList->rmx_output_gen_set_rate_max_burst = reinterpret_cast<PFNRMX_OUTPUT_GEN_SET_RATE_MAX_BURST>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_set_rate_max_burst_v1")));
        FunctionList->rmx_output_gen_set_rate_typical_packet_size = reinterpret_cast<PFNRMX_OUTPUT_GEN_SET_RATE_TYPICAL_PACKET_SIZE>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_set_rate_typical_packet_size_v1")));
        FunctionList->rmx_output_gen_update_rate = reinterpret_cast<PFNRMX_OUTPUT_GEN_UPDATE_RATE>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_update_rate_v1")));
        FunctionList->rmx_output_gen_update_remote_addr = reinterpret_cast<PFNRMX_OUTPUT_GEN_UPDATE_REMOTE_ADDR>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_update_remote_addr_v1")));
        FunctionList->rmx_output_gen_init_chunk_handle = reinterpret_cast<PFNRMX_OUTPUT_GEN_INIT_CHUNK_HANDLE>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_init_chunk_handle_v1")));
        FunctionList->rmx_output_gen_get_next_chunk = reinterpret_cast<PFNRMX_OUTPUT_GEN_GET_NEXT_CHUNK>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_get_next_chunk_v1")));
        FunctionList->rmx_output_gen_set_chunk_remote_addr = reinterpret_cast<PFNRMX_OUTPUT_GEN_SET_CHUNK_REMOTE_ADDR>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_set_chunk_remote_addr_v1")));
        FunctionList->rmx_output_gen_append_packet_to_chunk = reinterpret_cast<PFNRMX_OUTPUT_GEN_APPEND_PACKET_TO_CHUNK>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_append_packet_to_chunk_v1")));
        FunctionList->rmx_output_gen_mark_chunk_for_tracking = reinterpret_cast<PFNRMX_OUTPUT_GEN_MARK_CHUNK_FOR_TRACKING>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_mark_chunk_for_tracking_v1")));
        FunctionList->rmx_output_gen_commit_chunk = reinterpret_cast<PFNRMX_OUTPUT_GEN_COMMIT_CHUNK>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_commit_chunk_v1")));
        FunctionList->rmx_output_gen_poll_for_completion = reinterpret_cast<PFNRMX_OUTPUT_GEN_POLL_FOR_COMPLETION>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_poll_for_completion_v1")));
        FunctionList->rmx_output_gen_get_last_completion = reinterpret_cast<PFNRMX_OUTPUT_GEN_GET_LAST_COMPLETION>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_gen_get_last_completion_v1")));
        FunctionList->rmx_output_get_chunk_count = reinterpret_cast<PFNRMX_OUTPUT_GET_CHUNK_COUNT>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_get_chunk_count_v1")));
        FunctionList->rmx_output_update_dscp = reinterpret_cast<PFNRMX_OUTPUT_UPDATE_DSCP>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_update_dscp_v1")));
        FunctionList->rmx_output_update_ecn = reinterpret_cast<PFNRMX_OUTPUT_UPDATE_ECN>(FPlatformProcess::GetDllExport(LibraryHandle, TEXT("rmx_output_update_ecn_v1")));

        // Check if all functions were loaded succesfully.
        bool bHasLoadedFunctions = true;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_get_version_numbers;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_get_version_string;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_set_cpu_affinity;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_enable_system_signal_handling;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_init_lib_param;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_set_lib_param_name;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_set_lib_param_value;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_set_lib_param_forced;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_apply_lib_param;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->_rmx_init;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_cleanup;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_get_device_list;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_free_device_list;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_get_device_count;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_get_device;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_get_device_interface_name;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_get_device_ip_count;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_get_device_ip_address;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_get_device_mac_address;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_get_device_id;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_get_device_serial_number;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_retrieve_device_iface;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_enquire_device_capabilities;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_apply_device_config;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_revert_device_config;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_init_user_clock;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_set_user_clock_handler;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_set_user_clock_context;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_use_user_clock;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_init_ptp_clock;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_set_ptp_clock_device;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_use_ptp_clock;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_check_clock_steady;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_get_time;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_init_sockaddr_in;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_resolve_sockaddr;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_sockaddr_to_std_sockaddr;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_init_event_channel;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_set_event_channel_handle;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_establish_event_channel;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_init_notification;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_set_notification_overlapped;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_request_notification;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_init_mem_registry;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_set_mem_registry_option;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_register_memory;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_deregister_memory;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_init_stream;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_set_mem_capacity_in_packets;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_set_stream_nic_address;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_enable_stream_option;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_set_mem_sub_block_count;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_set_entry_size_range;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_determine_mem_layout;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_get_mem_capacity_in_packets;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_get_mem_block_buffer;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_get_stride_size;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_set_timestamp_format;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_create_stream;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_destroy_stream;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_init_flow;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_set_flow_local_addr;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_set_flow_remote_addr;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_set_flow_tag;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_attach_flow;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_detach_flow;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_set_completion_moderation;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_init_chunk_handle;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_get_next_chunk;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_get_chunk_completion;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_input_get_packet_info;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_init;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_set_sdp;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_set_idx_in_sdp;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_set_packets_per_frame;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_set_source_ports;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_set_tx_adaptive_scheduling_factor;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_set_pcp;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_set_dscp;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_set_ecn;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_init_mem_blocks;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_set_chunk_count;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_set_sub_block_count;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_get_sub_block;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_get_dup_sub_block;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_set_packet_layout;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_assign_mem_blocks;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_set_packets_per_chunk;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_set_stride_size;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_create_stream;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_destroy_stream;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_init_context;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_set_context_block;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_get_local_address;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_get_remote_address;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_init_chunk_handle;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_set_chunk_packet_count;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_get_next_chunk;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_mark_chunk_for_tracking;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_commit_chunk;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_poll_for_completion;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_get_last_completion;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_cancel_unsent_chunks;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_media_skip_chunks;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_init_stream;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_set_packets_per_chunk;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_set_local_addr;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_set_remote_addr;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_set_max_sub_blocks;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_set_pcp;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_set_dscp;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_set_ecn;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_set_rate;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_create_stream;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_destroy_stream;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_init_rate;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_set_rate_max_burst;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_set_rate_typical_packet_size;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_update_rate;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_update_remote_addr;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_init_chunk_handle;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_get_next_chunk;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_set_chunk_remote_addr;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_append_packet_to_chunk;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_mark_chunk_for_tracking;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_commit_chunk;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_poll_for_completion;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_gen_get_last_completion;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_get_chunk_count;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_update_dscp;
        bHasLoadedFunctions = bHasLoadedFunctions && FunctionList->rmx_output_update_ecn;

        return bHasLoadedFunctions;
    }

} // namespace UE::RivermaxCore::Private
