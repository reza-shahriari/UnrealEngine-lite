#ifndef DUMMY_READER_H
#define DUMMY_READER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

typedef struct iree_flatcc___IncludeWorkaround iree_flatcc___IncludeWorkaround_t;
typedef const iree_flatcc___IncludeWorkaround_t *iree_flatcc___IncludeWorkaround_struct_t;
typedef iree_flatcc___IncludeWorkaround_t *iree_flatcc___IncludeWorkaround_mutable_struct_t;
typedef const iree_flatcc___IncludeWorkaround_t *iree_flatcc___IncludeWorkaround_vec_t;
typedef iree_flatcc___IncludeWorkaround_t *iree_flatcc___IncludeWorkaround_mutable_vec_t;

#ifndef iree_flatcc___IncludeWorkaround_file_identifier
#define iree_flatcc___IncludeWorkaround_file_identifier 0
#endif
/* deprecated, use iree_flatcc___IncludeWorkaround_file_identifier */
#ifndef iree_flatcc___IncludeWorkaround_identifier
#define iree_flatcc___IncludeWorkaround_identifier 0
#endif
#define iree_flatcc___IncludeWorkaround_type_hash ((flatbuffers_thash_t)0x1a9fd428)
#define iree_flatcc___IncludeWorkaround_type_identifier "\x28\xd4\x9f\x1a"
#ifndef iree_flatcc___IncludeWorkaround_file_extension
#define iree_flatcc___IncludeWorkaround_file_extension "bin"
#endif


struct iree_flatcc___IncludeWorkaround {
    alignas(4) int32_t reserved;
};
static_assert(sizeof(iree_flatcc___IncludeWorkaround_t) == 4, "struct size mismatch");

static inline const iree_flatcc___IncludeWorkaround_t *iree_flatcc___IncludeWorkaround__const_ptr_add(const iree_flatcc___IncludeWorkaround_t *p, size_t i) { return p + i; }
static inline iree_flatcc___IncludeWorkaround_t *iree_flatcc___IncludeWorkaround__ptr_add(iree_flatcc___IncludeWorkaround_t *p, size_t i) { return p + i; }
static inline iree_flatcc___IncludeWorkaround_struct_t iree_flatcc___IncludeWorkaround_vec_at(iree_flatcc___IncludeWorkaround_vec_t vec, size_t i)
__flatbuffers_struct_vec_at(vec, i)
static inline size_t iree_flatcc___IncludeWorkaround__size(void) { return 4; }
static inline size_t iree_flatcc___IncludeWorkaround_vec_len(iree_flatcc___IncludeWorkaround_vec_t vec)
__flatbuffers_vec_len(vec)
__flatbuffers_struct_as_root(iree_flatcc___IncludeWorkaround)

__flatbuffers_define_struct_scalar_field(iree_flatcc___IncludeWorkaround, reserved, flatbuffers_int32, int32_t)



#include "flatcc/flatcc_epilogue.h"
#endif /* DUMMY_READER_H */
