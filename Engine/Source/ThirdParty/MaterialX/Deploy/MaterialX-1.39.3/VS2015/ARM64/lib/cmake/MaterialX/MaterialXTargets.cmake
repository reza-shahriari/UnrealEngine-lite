# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.12")
   message(FATAL_ERROR "CMake >= 2.8.12 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.12...3.28)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS MaterialXCore MaterialXFormat MaterialXGenShader MaterialXGenGlsl MaterialXGenOsl MaterialXGenMdl MaterialXGenMsl MaterialXRender MaterialXRenderGlsl MaterialXRenderHw MaterialXRenderOsl)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target MaterialXCore
add_library(MaterialXCore STATIC IMPORTED)

set_target_properties(MaterialXCore PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(MaterialXCore
    INTERFACE
      FILE_SET "mxHeaders"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/MaterialXCore/Generated.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Definition.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Document.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Element.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Exception.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Export.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Geom.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Interface.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Library.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Look.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Material.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Node.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Property.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Traversal.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Types.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Unit.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Util.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Value.h" "${_IMPORT_PREFIX}/include/MaterialXCore/Variant.h"
  )
else()
  set_property(TARGET MaterialXCore
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include"
  )
endif()

# Create imported target MaterialXFormat
add_library(MaterialXFormat STATIC IMPORTED)

set_target_properties(MaterialXFormat PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "MaterialXCore"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(MaterialXFormat
    INTERFACE
      FILE_SET "mxHeaders"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/MaterialXFormat/Environ.h" "${_IMPORT_PREFIX}/include/MaterialXFormat/Export.h" "${_IMPORT_PREFIX}/include/MaterialXFormat/File.h" "${_IMPORT_PREFIX}/include/MaterialXFormat/Util.h" "${_IMPORT_PREFIX}/include/MaterialXFormat/XmlIo.h"
  )
else()
  set_property(TARGET MaterialXFormat
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include"
  )
endif()

# Create imported target MaterialXGenShader
add_library(MaterialXGenShader STATIC IMPORTED)

set_target_properties(MaterialXGenShader PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "MaterialXFormat;MaterialXCore"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(MaterialXGenShader
    INTERFACE
      FILE_SET "mxHeaders"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/MaterialXGenShader/ColorManagementSystem.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/DefaultColorManagementSystem.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Export.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Factory.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/GenContext.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/GenOptions.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/GenUserData.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/HwShaderGenerator.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Library.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Shader.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/ShaderGenerator.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/ShaderGraph.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/ShaderNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/ShaderNodeImpl.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/ShaderStage.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/ShaderTranslator.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Syntax.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/TypeDesc.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/UnitSystem.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Util.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/BlurNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/ClosureCompoundNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/ClosureSourceCodeNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/CompoundNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/ConvolutionNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/HwBitangentNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/HwBlurNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/HwFrameNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/HwGeomColorNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/HwGeomPropValueNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/HwHeightToNormalNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/HwImageNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/HwNormalNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/HwPositionNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/HwTangentNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/HwTexCoordNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/HwTransformNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/HwViewDirectionNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/MaterialNode.h" "${_IMPORT_PREFIX}/include/MaterialXGenShader/Nodes/SourceCodeNode.h"
  )
else()
  set_property(TARGET MaterialXGenShader
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include"
  )
endif()

# Create imported target MaterialXGenGlsl
add_library(MaterialXGenGlsl STATIC IMPORTED)

set_target_properties(MaterialXGenGlsl PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "MaterialXGenShader;MaterialXCore"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(MaterialXGenGlsl
    INTERFACE
      FILE_SET "mxHeaders"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/MaterialXGenGlsl/EsslShaderGenerator.h" "${_IMPORT_PREFIX}/include/MaterialXGenGlsl/EsslSyntax.h" "${_IMPORT_PREFIX}/include/MaterialXGenGlsl/Export.h" "${_IMPORT_PREFIX}/include/MaterialXGenGlsl/GlslResourceBindingContext.h" "${_IMPORT_PREFIX}/include/MaterialXGenGlsl/GlslShaderGenerator.h" "${_IMPORT_PREFIX}/include/MaterialXGenGlsl/GlslSyntax.h" "${_IMPORT_PREFIX}/include/MaterialXGenGlsl/VkResourceBindingContext.h" "${_IMPORT_PREFIX}/include/MaterialXGenGlsl/VkShaderGenerator.h" "${_IMPORT_PREFIX}/include/MaterialXGenGlsl/VkSyntax.h" "${_IMPORT_PREFIX}/include/MaterialXGenGlsl/Nodes/LightCompoundNodeGlsl.h" "${_IMPORT_PREFIX}/include/MaterialXGenGlsl/Nodes/LightNodeGlsl.h" "${_IMPORT_PREFIX}/include/MaterialXGenGlsl/Nodes/LightSamplerNodeGlsl.h" "${_IMPORT_PREFIX}/include/MaterialXGenGlsl/Nodes/LightShaderNodeGlsl.h" "${_IMPORT_PREFIX}/include/MaterialXGenGlsl/Nodes/NumLightsNodeGlsl.h" "${_IMPORT_PREFIX}/include/MaterialXGenGlsl/Nodes/SurfaceNodeGlsl.h" "${_IMPORT_PREFIX}/include/MaterialXGenGlsl/Nodes/UnlitSurfaceNodeGlsl.h"
  )
else()
  set_property(TARGET MaterialXGenGlsl
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include"
  )
endif()

# Create imported target MaterialXGenOsl
add_library(MaterialXGenOsl STATIC IMPORTED)

set_target_properties(MaterialXGenOsl PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "MaterialXGenShader;MaterialXCore"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(MaterialXGenOsl
    INTERFACE
      FILE_SET "mxHeaders"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/MaterialXGenOsl/Export.h" "${_IMPORT_PREFIX}/include/MaterialXGenOsl/OslShaderGenerator.h" "${_IMPORT_PREFIX}/include/MaterialXGenOsl/OslSyntax.h" "${_IMPORT_PREFIX}/include/MaterialXGenOsl/Nodes/BlurNodeOsl.h" "${_IMPORT_PREFIX}/include/MaterialXGenOsl/Nodes/MaterialNodeOsl.h"
  )
else()
  set_property(TARGET MaterialXGenOsl
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include"
  )
endif()

# Create imported target MaterialXGenMdl
add_library(MaterialXGenMdl STATIC IMPORTED)

set_target_properties(MaterialXGenMdl PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "MaterialXGenShader;MaterialXCore"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(MaterialXGenMdl
    INTERFACE
      FILE_SET "mxHeaders"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/MaterialXGenMdl/Export.h" "${_IMPORT_PREFIX}/include/MaterialXGenMdl/MdlShaderGenerator.h" "${_IMPORT_PREFIX}/include/MaterialXGenMdl/MdlSyntax.h" "${_IMPORT_PREFIX}/include/MaterialXGenMdl/Nodes/BlurNodeMdl.h" "${_IMPORT_PREFIX}/include/MaterialXGenMdl/Nodes/ClosureCompoundNodeMdl.h" "${_IMPORT_PREFIX}/include/MaterialXGenMdl/Nodes/ClosureLayerNodeMdl.h" "${_IMPORT_PREFIX}/include/MaterialXGenMdl/Nodes/ClosureSourceCodeNodeMdl.h" "${_IMPORT_PREFIX}/include/MaterialXGenMdl/Nodes/CompoundNodeMdl.h" "${_IMPORT_PREFIX}/include/MaterialXGenMdl/Nodes/CustomNodeMdl.h" "${_IMPORT_PREFIX}/include/MaterialXGenMdl/Nodes/HeightToNormalNodeMdl.h" "${_IMPORT_PREFIX}/include/MaterialXGenMdl/Nodes/ImageNodeMdl.h" "${_IMPORT_PREFIX}/include/MaterialXGenMdl/Nodes/MaterialNodeMdl.h" "${_IMPORT_PREFIX}/include/MaterialXGenMdl/Nodes/SourceCodeNodeMdl.h" "${_IMPORT_PREFIX}/include/MaterialXGenMdl/Nodes/SurfaceNodeMdl.h"
  )
else()
  set_property(TARGET MaterialXGenMdl
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include"
  )
endif()

# Create imported target MaterialXGenMsl
add_library(MaterialXGenMsl STATIC IMPORTED)

set_target_properties(MaterialXGenMsl PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "MaterialXGenShader;MaterialXCore"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(MaterialXGenMsl
    INTERFACE
      FILE_SET "mxHeaders"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/MaterialXGenMsl/Export.h" "${_IMPORT_PREFIX}/include/MaterialXGenMsl/MslResourceBindingContext.h" "${_IMPORT_PREFIX}/include/MaterialXGenMsl/MslShaderGenerator.h" "${_IMPORT_PREFIX}/include/MaterialXGenMsl/MslSyntax.h" "${_IMPORT_PREFIX}/include/MaterialXGenMsl/Nodes/LightCompoundNodeMsl.h" "${_IMPORT_PREFIX}/include/MaterialXGenMsl/Nodes/LightNodeMsl.h" "${_IMPORT_PREFIX}/include/MaterialXGenMsl/Nodes/LightSamplerNodeMsl.h" "${_IMPORT_PREFIX}/include/MaterialXGenMsl/Nodes/LightShaderNodeMsl.h" "${_IMPORT_PREFIX}/include/MaterialXGenMsl/Nodes/NumLightsNodeMsl.h" "${_IMPORT_PREFIX}/include/MaterialXGenMsl/Nodes/SurfaceNodeMsl.h" "${_IMPORT_PREFIX}/include/MaterialXGenMsl/Nodes/UnlitSurfaceNodeMsl.h"
  )
else()
  set_property(TARGET MaterialXGenMsl
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include"
  )
endif()

# Create imported target MaterialXRender
add_library(MaterialXRender STATIC IMPORTED)

set_target_properties(MaterialXRender PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "MaterialXGenShader"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(MaterialXRender
    INTERFACE
      FILE_SET "mxHeaders"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/MaterialXRender/Camera.h" "${_IMPORT_PREFIX}/include/MaterialXRender/CgltfLoader.h" "${_IMPORT_PREFIX}/include/MaterialXRender/Export.h" "${_IMPORT_PREFIX}/include/MaterialXRender/GeometryHandler.h" "${_IMPORT_PREFIX}/include/MaterialXRender/Harmonics.h" "${_IMPORT_PREFIX}/include/MaterialXRender/Image.h" "${_IMPORT_PREFIX}/include/MaterialXRender/ImageHandler.h" "${_IMPORT_PREFIX}/include/MaterialXRender/LightHandler.h" "${_IMPORT_PREFIX}/include/MaterialXRender/Mesh.h" "${_IMPORT_PREFIX}/include/MaterialXRender/OiioImageLoader.h" "${_IMPORT_PREFIX}/include/MaterialXRender/ShaderMaterial.h" "${_IMPORT_PREFIX}/include/MaterialXRender/ShaderRenderer.h" "${_IMPORT_PREFIX}/include/MaterialXRender/StbImageLoader.h" "${_IMPORT_PREFIX}/include/MaterialXRender/TextureBaker.h" "${_IMPORT_PREFIX}/include/MaterialXRender/Timer.h" "${_IMPORT_PREFIX}/include/MaterialXRender/TinyObjLoader.h" "${_IMPORT_PREFIX}/include/MaterialXRender/Types.h" "${_IMPORT_PREFIX}/include/MaterialXRender/Util.h" "${_IMPORT_PREFIX}/include/MaterialXRender/TextureBaker.inl" "${_IMPORT_PREFIX}/include/MaterialXRender/External/Cgltf/cgltf.h" "${_IMPORT_PREFIX}/include/MaterialXRender/External/StbImage/stb_image.h" "${_IMPORT_PREFIX}/include/MaterialXRender/External/StbImage/stb_image_write.h" "${_IMPORT_PREFIX}/include/MaterialXRender/External/TinyObjLoader/tiny_obj_loader.h"
  )
else()
  set_property(TARGET MaterialXRender
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include"
  )
endif()

# Create imported target MaterialXRenderGlsl
add_library(MaterialXRenderGlsl STATIC IMPORTED)

set_target_properties(MaterialXRenderGlsl PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "MaterialXRenderHw;MaterialXGenGlsl;Opengl32"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(MaterialXRenderGlsl
    INTERFACE
      FILE_SET "mxHeaders"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/MaterialXRenderGlsl/Export.h" "${_IMPORT_PREFIX}/include/MaterialXRenderGlsl/GLCocoaWrappers.h" "${_IMPORT_PREFIX}/include/MaterialXRenderGlsl/GLContext.h" "${_IMPORT_PREFIX}/include/MaterialXRenderGlsl/GLFramebuffer.h" "${_IMPORT_PREFIX}/include/MaterialXRenderGlsl/GLTextureHandler.h" "${_IMPORT_PREFIX}/include/MaterialXRenderGlsl/GLUtil.h" "${_IMPORT_PREFIX}/include/MaterialXRenderGlsl/GlslMaterial.h" "${_IMPORT_PREFIX}/include/MaterialXRenderGlsl/GlslProgram.h" "${_IMPORT_PREFIX}/include/MaterialXRenderGlsl/GlslRenderer.h" "${_IMPORT_PREFIX}/include/MaterialXRenderGlsl/TextureBaker.h" "${_IMPORT_PREFIX}/include/MaterialXRenderGlsl/External/Glad/glad.h" "${_IMPORT_PREFIX}/include/MaterialXRenderGlsl/External/Glad/khrplatform.h"
  )
else()
  set_property(TARGET MaterialXRenderGlsl
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include"
  )
endif()

# Create imported target MaterialXRenderHw
add_library(MaterialXRenderHw STATIC IMPORTED)

set_target_properties(MaterialXRenderHw PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "MaterialXRender"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(MaterialXRenderHw
    INTERFACE
      FILE_SET "mxHeaders"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/MaterialXRenderHw/Export.h" "${_IMPORT_PREFIX}/include/MaterialXRenderHw/SimpleWindow.h" "${_IMPORT_PREFIX}/include/MaterialXRenderHw/WindowCocoaWrappers.h" "${_IMPORT_PREFIX}/include/MaterialXRenderHw/WindowWrapper.h"
  )
else()
  set_property(TARGET MaterialXRenderHw
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include"
  )
endif()

# Create imported target MaterialXRenderOsl
add_library(MaterialXRenderOsl STATIC IMPORTED)

set_target_properties(MaterialXRenderOsl PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "MaterialXRender"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(MaterialXRenderOsl
    INTERFACE
      FILE_SET "mxHeaders"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/MaterialXRenderOsl/Export.h" "${_IMPORT_PREFIX}/include/MaterialXRenderOsl/OslRenderer.h"
  )
else()
  set_property(TARGET MaterialXRenderOsl
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
      "${_IMPORT_PREFIX}/include"
  )
endif()

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/MaterialXTargets-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  if(CMAKE_VERSION VERSION_LESS "3.28"
      OR NOT DEFINED _cmake_import_check_xcframework_for_${_cmake_target}
      OR NOT IS_DIRECTORY "${_cmake_import_check_xcframework_for_${_cmake_target}}")
    foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
      if(NOT EXISTS "${_cmake_file}")
        message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
      endif()
    endforeach()
  endif()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
